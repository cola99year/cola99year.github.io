(window.webpackJsonp=window.webpackJsonp||[]).push([[11],{332:function(t,s,a){t.exports=a.p+"assets/img/image-20230522213753746.7e7064ab.png"},333:function(t,s,a){t.exports=a.p+"assets/img/image-20230522213820846.e951d888.png"},334:function(t,s,a){t.exports=a.p+"assets/img/image-20230522213838094.3d209740.png"},401:function(t,s,a){"use strict";a.r(s);var n=a(3),e=Object(n.a)({},(function(){var t=this,s=t._self._c;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h2",{attrs:{id:"一、八种基本数据类型及其包装类"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#一、八种基本数据类型及其包装类"}},[t._v("#")]),t._v(" 一、八种基本数据类型及其包装类")]),t._v(" "),s("p",[t._v("参考文章："),s("a",{attrs:{href:"https://blog.csdn.net/qing_gee/article/details/101670051?spm=1001.2101.3001.6650.1&utm_medium=distribute.pc_relevant.none-task-blog-2~default~CTRLIST~default-1-101670051-blog-109393282.pc_relevant_scanpaymentv1&depth_1-utm_source=distribute.pc_relevant.none-task-blog-2~default~CTRLIST~default-1-101670051-blog-109393282.pc_relevant_scanpaymentv1&utm_relevant_index=2",target:"_blank",rel:"noopener noreferrer"}},[t._v("面试官：说说基本类型和包装类型的区别吧"),s("OutboundLink")],1),t._v("；")]),t._v(" "),s("ul",[s("li",[t._v("6种数字类型：4种整数类型 + 2种浮点型")]),t._v(" "),s("li",[t._v("1种布尔类型")]),t._v(" "),s("li",[t._v("1种字符型")])]),t._v(" "),s("table",[s("thead",[s("tr",[s("th",{staticStyle:{"text-align":"left"}},[t._v("数据类型")]),t._v(" "),s("th",{staticStyle:{"text-align":"left"}},[t._v("默认值")]),t._v(" "),s("th",[t._v("封装器")])])]),t._v(" "),s("tbody",[s("tr",[s("td",{staticStyle:{"text-align":"left"}},[t._v("byte(1字节)，short(2字节)，int(4字节)， long(8字节)")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("0、0L")]),t._v(" "),s("td",[t._v("Byte、Short、Interger、Long、")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"left"}},[t._v("float(4字节)， double(8字节)")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("0.0f、0.0d")]),t._v(" "),s("td",[t._v("Float、Double")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"left"}},[t._v("boolean(未定字节)")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("false")]),t._v(" "),s("td",[t._v("Boolean")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"left"}},[t._v("char(2字节)")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("\\u0000（空格）")]),t._v(" "),s("td",[t._v("Character")])])])]),t._v(" "),s("p",[t._v("int类型占4字节，即32位，能表示的数字范围是-2147483648到2147483647【2的31次方】。不能到32次方是因为最高位为符号位，0表示正数，1表示负数。")]),t._v(" "),s("blockquote",[s("p",[s("strong",[t._v("注意")]),t._v("：")])]),t._v(" "),s("ol",[s("li",[t._v("Integer b;   b默认值为null，因为"),s("strong",[t._v("包装类型")]),t._v("不赋值就是 "),s("code",[t._v("null")])]),t._v(" "),s("li",[t._v("字符常量"),s("strong",[t._v("char只占 2 个字节")]),t._v("; 字符串常量占若干个字节。是单引号引起的一个字符")]),t._v(" "),s("li",[s("code",[t._v("long")]),t._v(" 类型数据一定要在数值后面加上 L，否则将作为整型解析。")]),t._v(" "),s("li",[t._v("超过long表示范围的整数，用BigInteger，本质是int []数组！")]),t._v(" "),s("li",[t._v("为了避免精度丢失，可以使用 "),s("code",[t._v("BigDecimal")]),t._v(" 来进行浮点数的运算，BigDecimal本质是一个"),s("strong",[t._v("BigInteger")]),t._v("和一个"),s("strong",[t._v("scale")]),t._v("来表示的，即BigInteger表示一个完整的整数，而"),s("strong",[t._v("scale表示小数位数")])])]),t._v(" "),s("h3",{attrs:{id:"_1-题目巩固"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_1-题目巩固"}},[t._v("#")]),t._v(" 1. 题目巩固")]),t._v(" "),s("blockquote",[s("p",[t._v("一题涉及三个知识点：A正确")])]),t._v(" "),s("img",{staticStyle:{zoom:"50%"},attrs:{src:a(332),alt:"image-20230522213753746"}}),t._v(" "),s("img",{staticStyle:{zoom:"67%"},attrs:{src:a(333),alt:"image-20230522213820846"}}),t._v(" "),s("blockquote",[s("p",[t._v("若为小范围写成大范围就不需要强制转换，如下图箭头所示：")])]),t._v(" "),s("img",{staticStyle:{zoom:"67%"},attrs:{src:a(334),alt:"image-20230522213838094"}}),t._v(" "),s("hr"),t._v(" "),s("h3",{attrs:{id:"_2-成员变量与局部变量的区别"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_2-成员变量与局部变量的区别"}},[t._v("#")]),t._v(" 2. 成员变量与局部变量的区别？")]),t._v(" "),s("ol",[s("li",[t._v("类成员变量自带有默认值，")]),t._v(" "),s("li",[t._v("局部变量则必须声明初始值：局部变量不能被访问控制修饰符及 "),s("code",[t._v("static")]),t._v(" 所修饰")]),t._v(" "),s("li",[t._v("都能被final修饰")])]),t._v(" "),s("div",{staticClass:"language-java extra-class"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" test "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    \n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("static")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" c"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("static")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Integer")]),t._v(" b"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    \n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("static")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("main")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" args"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" a"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//局部变量没有初始值，编译失败")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("System")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("out"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("println")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("b"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//null")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("System")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("out"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("println")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("c"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//0")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("h3",{attrs:{id:"_3-integer类的方法💕"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_3-integer类的方法💕"}},[t._v("#")]),t._v(" 3. Integer类的方法💕")]),t._v(" "),s("blockquote",[s("p",[t._v("重点说明")])]),t._v(" "),s("table",[s("thead",[s("tr",[s("th",[t._v("方法")]),t._v(" "),s("th",[t._v("说明")])])]),t._v(" "),s("tbody",[s("tr",[s("td",[t._v("Integer integer = Integer.valueOf(6)")]),t._v(" "),s("td",[s("strong",[t._v("装箱操作")]),t._v("，将一个int类型的数字封装成"),s("strong",[t._v("Integer对象")]),t._v("；下面有3种用法，能转String")])]),t._v(" "),s("tr",[s("td",[t._v("new Integer(123).toString();")]),t._v(" "),s("td",[s("strong",[t._v("Integer对象")]),t._v("转为String类型，与valueOf相反")])]),t._v(" "),s("tr",[s("td",[t._v("Integer.MAX_VALUE")]),t._v(" "),s("td",[t._v("int所能表示的最大值 0x7FFFFFFF；而MIN_VALUE代表int所能表示的最小值 0x80000000")])]),t._v(" "),s("tr",[s("td",[t._v("int b = Integer.parseInt(a);")]),t._v(" "),s("td",[t._v("就是把String类型转化为"),s("strong",[t._v("int类型")])])]),t._v(" "),s("tr",[s("td",[t._v("int intValue()")]),t._v(" "),s("td",[s("strong",[t._v("拆箱操作")]),t._v("，将Interger对象转化为int；例如：Integer integer = new Integer(3);     int i = integer.intValue();")])])])]),t._v(" "),s("div",{staticClass:"language-java extra-class"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Integer")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" value"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v("通过指定的"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v("值构成一个"),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Integer")]),t._v("对象。\n"),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Integer")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),t._v(" s"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v("通过指定的"),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),t._v("值构成一个"),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Integer")]),t._v("对象。   \n    \n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//Integer对象的方法：对象要干什么")]),t._v("\n    \n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("intValue")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v("将"),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Interger")]),t._v("对象转化为"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v("。即自动拆箱\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("long")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("longValue")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v("将此对象转化为"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("long")]),t._v("。\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("byte")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("byteValue")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v("将此对象转化为"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("byte")]),t._v("。\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("short")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("shortValue")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v("将此对象转化为"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("short")]),t._v("。\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("double")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("doubleValue")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v("将此对象转化为"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("double")]),t._v("。\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("float")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("floatValue")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v("将此对象转化为"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("float")]),t._v("。\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("boolean")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("equals")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Object")]),t._v(" obj"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v("将此对象与指定的对象进行比较。\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("compareTo")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Integer")]),t._v(" anotherInteger"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v("用"),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Integer")]),t._v("数字比较两个对象。\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("hashCode")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v("返回此的哈希码"),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Integer")]),t._v("。\n"),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("toString")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v("返回"),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),t._v("表示此"),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Integer")]),t._v("值的对象 。\n    \n    \n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//Interger类的静态方法")]),t._v("\n    \n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("static")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Integer")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("valueOf")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" i"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("   将"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v("转化为"),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Integer")]),t._v("对象，是创建"),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Integer")]),t._v("对象的常用方法。即自动装箱\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("static")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Integer")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("valueOf")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),t._v(" s"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v("  将"),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),t._v("转化为"),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Integer")]),t._v("，相当于调用 "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Integer")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("valueOf")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("“"),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("123")]),t._v("”"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("10")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" ，即将默认的参数"),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("10")]),t._v("省略。\n    \t\t\t\t\t\t\t\t"),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),t._v("里面若有字母，则抛出"),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("NumberFormatException")]),t._v(" 异常。\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("static")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Integer")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("valueOf")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),t._v(" s"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" radix"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v("返回一个"),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Integer")]),t._v("对象，该对象"),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),t._v("包含使用第二个参数给出的基数"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("计算机进制"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("解析时从指定的值中提取的值。\n    \n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("static")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("max")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" a"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" b"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v("返回两个"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v("值中的较大值，就像通过调用"),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Math")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("max。一样\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("static")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("min")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" a"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" b"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v("返回两个"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v("值中较小的一个，就像通过调用"),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Math")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("min一样。\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("static")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("sum")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" a"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" b"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v("根据"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v("运算符将两个整数相加。\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("static")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("toBinaryString")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" i"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v("返回整数参数的字符串表示形式，作为基数为"),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),t._v("中的无符号整数。\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("static")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("toHexString")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" i"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v("返回整数参数的字符串表示形式，作为基数为"),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("16")]),t._v("的无符号整数。\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("static")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("toOctalString")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" i"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v("返回整数参数的字符串表示形式，作为基数为"),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("8")]),t._v("的无符号整数。\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("static")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("long")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("toUnsignedLong")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" x"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v("通过无符号转换将参数转换为"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("long")]),t._v("。\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("static")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("toUnsignedString")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" i"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v("以无符号十进制值的形式返回参数的字符串表示形式。\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("static")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("toUnsignedString")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" i"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" radix"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v("返回第一个参数的字符串表示形式，作为第二个参数指定的基数中的无符号整数值。\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("static")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("signum")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" i"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v("返回指定"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v("值的"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("signum")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("符号"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("函数。\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("static")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("bitCount")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" i"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v("返回指定"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v("值的二进制补码表示形式中的一位数。\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("static")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Integer")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("getInteger")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),t._v(" nm"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v("根据指定的系统属性名称获取"),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Integer")]),t._v("。\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("static")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Integer")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("getInteger")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),t._v(" nm"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" val"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v("根据指定的系统属性名称获取"),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Integer")]),t._v("，如果没有则返回val\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("static")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Integer")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("getInteger")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),t._v(" nm"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Integer")]),t._v(" val"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v("根据指定的系统属性名称获取"),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Integer")]),t._v("。如果没有则返回val\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("static")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Integer")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("decode")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),t._v(" nm"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v("将"),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),t._v("解码为"),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Integer")]),t._v("。"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0xf")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("041")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("99")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("static")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("divideUnsigned")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" dividend"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" divisor"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v("返回将第一个参数除以第二个参数的无符号商，其中每个参数和结果都被解释为无符号值。\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("static")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("lowestOneBit")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" i"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v("返回一个"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v("最多只有一位的值，位于指定"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v("值中最低位（“最右侧”）一位的位置 。\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("static")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("highestOneBit")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" i"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v("返回一个"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v("最多只有一位的值，位于指定"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v("值中最高位（“最左侧”）一位的位置 。\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("static")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("numberOfLeadingZeros")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" i"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v("返回指定"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v("值的二进制补码表达式中最高位（“最左侧”）一位之前的零位数。\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("static")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("numberOfTrailingZeros")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" i"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v("返回指定"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v("值的二进制补码表达式中最低位（“最右侧”）一位之后的零位数 。\n    \n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("static")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("parseInt")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),t._v(" s"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v("将字符串参数解析为"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v("类型，而不是"),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Interger")]),t._v("对象。\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("static")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("parseInt")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),t._v(" s"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" radix"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v("将字符串参数解析为第二个参数指定的基数"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("计算机进制"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("中的有符号整数。\n    \n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("static")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("parseUnsignedInt")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),t._v(" s"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v("将字符串参数解析为无符号十进制整数。\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("static")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("parseUnsignedInt")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),t._v(" s"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" radix"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v("将字符串参数解析为第二个参数指定的基数"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("计算机进制"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("中的无符号整数。\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("static")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("remainderUnsigned")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" dividend"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" divisor"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v("返回将第一个参数除以第二个参数的无符号余数，其中每个参数和结果都被解释为无符号值。\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("static")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("reverse")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" i"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v("返回通过反转指定"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" 值的二进制补码二进制表示中的位顺序而获得的值。\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("static")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("reverseBytes")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" i"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v("返回通过反转指定"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v("值的二进制补码表示中的字节顺序获得的值。\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("static")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("rotateLeft")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" i"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" distance"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v("返回通过旋转"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v("指定位数左侧的指定值的二进制补码表示获得的值。\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("static")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("rotateRight")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" i"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" distance"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v("返回通过将指定"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v("值的二进制补码表示法旋转指定的位数而获得的值。\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("static")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("hashCode")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" value"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v("返回"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v("值的哈希码"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" 兼容 "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Integer")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("hashCode")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("。\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("static")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("compare")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" x"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" y"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v("以"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v("数字方式比较两个值。\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("static")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("compareUnsigned")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" x"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" y"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v("比较两个"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v("值，以数值方式将值视为无符号。\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("static")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("toString")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" i"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v("返回"),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),t._v("表示指定整数的对象。\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("static")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("toString")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" i"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" radix"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v("返回第二个参数指定的基数"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("计算机进制"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("中第一个参数的字符串表示形式。\n\n")])])]),s("h3",{attrs:{id:"_4-byte运算注意点"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_4-byte运算注意点"}},[t._v("#")]),t._v(" 4. byte运算注意点")]),t._v(" "),s("blockquote",[s("p",[t._v("byte的介绍")])]),t._v(" "),s("p",[t._v("在Java中，byte占据"),s("strong",[t._v("一个字节")]),t._v("，也就是8的bite位，范围是："),s("strong",[t._v("-128到127")]),t._v("。")]),t._v(" "),s("p",[t._v("正数最大为127是因为最高位为符号位，0表示正数，1表示负数。")]),t._v(" "),s("blockquote",[s("p",[t._v("运算规则")])]),t._v(" "),s("ol",[s("li",[s("p",[t._v("在Java中"),s("strong",[t._v("两个变量")]),t._v("(两个常量就不会有类型提升)只要参与了数学运算，"),s("strong",[t._v("只要类型比int小(即byte,char,short)，那么在运算之前，这些值会自动转换成int")]),t._v("。")])]),t._v(" "),s("li",[s("p",[t._v("如果将一个float值与一个double值相乘，结果就是double，如果将一个int和一个long值相加，则结果为long。")])]),t._v(" "),s("li",[s("p",[t._v("用byte运算要注意，如果结果的类型也是byte，有可能会发生负数运算后成正数，正数运算后变成负数的情况。")])])]),t._v(" "),s("div",{staticClass:"language-java extra-class"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("byte")]),t._v(" b1 "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0x20")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("byte")]),t._v(" b2 "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0x10")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//报错")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("byte")]),t._v(" b3 "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" b1 "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" b2"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" \n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//正确")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("byte")]),t._v(" b3 "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("byte")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("b1"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("b2"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//不报错,因为 1 和 2 是常量。")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("byte")]),t._v(" d "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" \n")])])])])}),[],!1,null,null,null);s.default=e.exports}}]);