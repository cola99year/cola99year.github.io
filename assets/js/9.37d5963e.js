(window.webpackJsonp=window.webpackJsonp||[]).push([[9],{328:function(t,s,a){t.exports=a.p+"assets/img/image-20230528123758017.ac4685a4.png"},329:function(t,s,a){t.exports=a.p+"assets/img/image-20230528123821013.7dab5d3e.png"},330:function(t,s,a){t.exports=a.p+"assets/img/image-20230528123839685.7582c63e.png"},331:function(t,s,a){t.exports=a.p+"assets/img/image-20230528123852352.d3abbb54.png"},400:function(t,s,a){"use strict";a.r(s);var n=a(3),r=Object(n.a)({},(function(){var t=this,s=t._self._c;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h2",{attrs:{id:"一、string概述"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#一、string概述"}},[t._v("#")]),t._v(" 一、String概述")]),t._v(" "),s("h3",{attrs:{id:"_1-概述"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_1-概述"}},[t._v("#")]),t._v(" 1. 概述")]),t._v(" "),s("ul",[s("li",[t._v("String本质是一个类。字符串"),s("strong",[t._v("底层是字符型char数组final char[]value，即字符构成的串")]),t._v("，final因此其也不可变，亦无增删改操作。")]),t._v(" "),s("li",[t._v('String字符串，使用一对""引起来表示')]),t._v(" "),s("li",[t._v("String类是final声明的，final类不可被继承")]),t._v(" "),s("li",[t._v("String实现了Serializable.接口：表示字符串是支持序列化的【IO流知识】")]),t._v(" "),s("li",[t._v("实现了ComparabLe接口：表示String可以比较大小")])]),t._v(" "),s("p",[t._v("体现：")]),t._v(" "),s("div",{staticClass:"language-java extra-class"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("final")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("implements")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[s("span",{pre:!0,attrs:{class:"token namespace"}},[t._v("java"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("io"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")])]),t._v("Serializable")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Comparable")]),s("span",{pre:!0,attrs:{class:"token generics"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("CharSequence")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//final修饰，是常量！创建后不可变")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("private")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("final")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("char")]),t._v(" value"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("blockquote",[s("p",[t._v("String的构造方法")])]),t._v(" "),s("img",{staticStyle:{zoom:"80%"},attrs:{src:a(328),alt:"image-20230528123758017"}}),t._v(" "),s("h3",{attrs:{id:"_2-字面量定义string"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_2-字面量定义string"}},[t._v("#")]),t._v(" 2. 字面量定义String")]),t._v(" "),s("blockquote",[s("p",[t._v("即："),s("code",[t._v('String s1 = "hello";')])]),t._v(" "),s("p",[t._v("不用new来定义都是字面量定义，地址存储在字符常量池中。")])]),t._v(" "),s("ul",[s("li",[t._v("字面量定义的String，都存在方法区里的字符常量池。")]),t._v(" "),s("li",[t._v("相同的字符串，二者的内存地址都是相同的，"),s("strong",[t._v("都是字符常量池里的地址")])]),t._v(" "),s("li",[t._v("若"),s("code",[t._v("s1")]),t._v("任意的重新赋值，任意的改变，都要在字符常量池重新开一个新地址。")])]),t._v(" "),s("blockquote",[s("p",[s("strong",[t._v("总结")]),t._v("：这就是String的不可变性。")]),t._v(" "),s("p",[t._v("这种方式字符串值声明在字符串常量池中，且常量池不会存储相同的字符串，可以节省一些空间。因此直接赋值（只开辟了一个空间） 的方式更常用和合理。")])]),t._v(" "),s("img",{staticStyle:{zoom:"67%"},attrs:{src:a(329),alt:"image-20230528123821013"}}),t._v(" "),s("p",[s("strong",[t._v("这个栈干嘛的？")]),t._v("：")]),t._v(" "),s("p",[t._v("存放基本类型的变量数据和对象的引用(就是一个名字)，对象本身不存放在栈中，而是存放在堆或者常量池中。栈内存归属于单个线程，每个线程都会有一个栈内存，其存储的变量只能在其所属线程中可见，即栈内存可以理解成线程的私有内存。栈区内存由编译器自动分配释放，具体方法执行结束之后，系统自动释放JVM内存资源。")]),t._v(" "),s("hr"),t._v(" "),s("h3",{attrs:{id:"_3-实例化定义string"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_3-实例化定义string"}},[t._v("#")]),t._v(" 3. 实例化定义String")]),t._v(" "),s("blockquote",[s("p",[t._v("实例化定义String，每次new都在堆空间开辟一个对象地址，两者显然不等，地址完全不同。")])]),t._v(" "),s("p",[t._v("new 创建字符串时，首先查看池中是否有相同的字符串，如果有则拷贝一份放到堆中，然后返回堆中的地址；如果池中没有则在堆中创建一份，然后返回堆中的地址。")]),t._v(" "),s("img",{staticStyle:{zoom:"67%"},attrs:{src:a(330),alt:"image-20230528123839685"}}),t._v(" "),s("h2",{attrs:{id:"二、string拼接判断"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#二、string拼接判断"}},[t._v("#")]),t._v(" 二、String拼接判断")]),t._v(" "),s("h3",{attrs:{id:"_1-string拼接的三种情况"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_1-string拼接的三种情况"}},[t._v("#")]),t._v(" 1. String拼接的三种情况")]),t._v(" "),s("p",[t._v("结论：")]),t._v(" "),s("ol",[s("li",[s("p",[s("strong",[t._v("常量与常量拼接")]),t._v("，结果在常量池，且常量池不会出现相同内容，如下①处，为true；")])]),t._v(" "),s("li",[s("p",[t._v("拼接中，若"),s("strong",[t._v("有一个变量s1")]),t._v("，结果就在堆中，地址就不同了，如下②处，为false。")])]),t._v(" "),s("li",[s("p",[t._v("调用"),s("strong",[t._v("intern")]),t._v("方法，返回值在常量池中，如下③。")])])]),t._v(" "),s("div",{staticClass:"language-java extra-class"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),t._v(" s1 "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"cola"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),t._v(" s2 "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Study"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),t._v(" s3 "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"colaStudy"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n① "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),t._v(" s4 "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"cola"')]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Study"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//s3 == s4 为true")]),t._v("\n② "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),t._v(" s5 "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" s1 "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Study"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("   "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//s3 == s5 为false")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),t._v(" s6 "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" s1 "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" s2"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("       "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//s3 == s6 为false")]),t._v("\n③ "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),t._v(" s7 "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" s5"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("intern")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v('//返回值得到s7使用的常量值中已存在"colaStudy"    s3 == s7为true')]),t._v("\n")])])]),s("h3",{attrs:{id:"_2-面试题巩固"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_2-面试题巩固"}},[t._v("#")]),t._v(" 2.  面试题巩固")]),t._v(" "),s("p",[t._v("1️⃣"),s("strong",[t._v("面试1")])]),t._v(" "),s("blockquote",[s("p",[s("code",[t._v('string s=new String("abc");')]),t._v("new方式创建对象，在内存中创建了几个对象？")])]),t._v(" "),s("p",[t._v("答："),s("strong",[t._v("一个或两个")]),t._v('。1一个是堆空间中new结构，另一个是char[]对应的常量池中的数据，如果有就不用了："abc”。如下图所示：')]),t._v(" "),s("p",[s("img",{attrs:{src:a(331),alt:"image-20230528123852352"}})]),t._v(" "),s("p",[t._v("2️⃣"),s("strong",[t._v("面试2")])]),t._v(" "),s("div",{staticClass:"language-java extra-class"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),t._v(" str1 "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"java"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//加入字符串常量池")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),t._v(" str2 "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"blog"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//加入字符串常量池")]),t._v("\n③"),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),t._v("   s "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" str1"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v("str2"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//该行代码创建了几个对象？")]),t._v("\n")])])]),s("blockquote",[s("p",[t._v("答："),s("code",[t._v("+")]),t._v('运算符会在堆中建立起两个String对象（在堆中创建），这两个对象的值分别是“java”和"blog"。')]),t._v(" "),s("p",[t._v("也就是说从字符串常量池中复制这两个值，然后在堆中创建两个对象。然后再建立对象s。")]),t._v(" "),s("p",[t._v("最终将“javablog”的堆地址赋给s，第三行代码共创建了"),s("strong",[t._v("3个String对象")]),t._v("。")])]),t._v(" "),s("p",[t._v("参考文章："),s("a",{attrs:{href:"https://blog.csdn.net/u010112268/article/details/105511449?ops_request_misc=%7B%22request%5Fid%22%3A%22165262319816781435449765%22%2C%22scm%22%3A%2220140713.130102334..%22%7D&request_id=165262319816781435449765&biz_id=0&utm_medium=distribute.pc_search_result.none-task-blog-2~all~sobaiduend~default-1-105511449-null-null.142%5Ev9%5Epc_search_result_control_group,157%5Ev4%5Econtrol&utm_term=String%E8%AF%A6%E8%A7%A3&spm=1018.2226.3001.4187",target:"_blank",rel:"noopener noreferrer"}},[t._v("String详细讲解"),s("OutboundLink")],1)]),t._v(" "),s("h2",{attrs:{id:"三、-stringbuilder与stringbuffer"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#三、-stringbuilder与stringbuffer"}},[t._v("#")]),t._v(" 三、 StringBuilder与StringBuffer")]),t._v(" "),s("blockquote",[s("p",[t._v("介绍：")])]),t._v(" "),s("p",[s("code",[t._v("StringBuilder")]),t._v(" 与 "),s("code",[t._v("StringBuffer")]),t._v(" 都继承自 "),s("code",[t._v("AbstractStringBuilder")]),t._v(" 类，在 "),s("code",[t._v("AbstractStringBuilder")]),t._v(" 中也是使用字符数组保存字符串，不过没有使用 "),s("code",[t._v("final")]),t._v(" 和 "),s("code",[t._v("private")]),t._v(" 关键字修饰，最关键的是这个 "),s("code",[t._v("AbstractStringBuilder")]),t._v(" 类还提供了很多"),s("strong",[t._v("修改字符串")]),t._v("的方法比如 "),s("code",[t._v("append")]),t._v(" 方法。")]),t._v(" "),s("p",[t._v("我们一般都是多线程。用StringBuffer会多一些。")]),t._v(" "),s("blockquote",[s("p",[t._v("线程安全：")])]),t._v(" "),s("p",[s("code",[t._v("String")]),t._v(" 中的对象是不可变的，也就可以理解为常量，线程安全。")]),t._v(" "),s("p",[t._v("StringBuffer："),s("code",[t._v("StringBuffer")]),t._v(" 对方法加了同步锁或者对调用的方法加了"),s("strong",[t._v("同步锁")]),t._v("，所以是线程安全的。")]),t._v(" "),s("p",[s("code",[t._v("StringBuilder")]),t._v(" 并没有对方法进行加同步锁，所以是非线程安全的。StringBuffer的速度比String要快")]),t._v(" "),s("blockquote",[s("p",[t._v("性能：")])]),t._v(" "),s("p",[s("code",[t._v("StringBuffer")]),t._v(" 每次都会对 "),s("code",[t._v("StringBuffer")]),t._v(" 对象本身进行操作，而不是生成新的对象并改变对象引用。相同情况下使用 "),s("code",[t._v("StringBuilder")]),t._v(" 相比使用 "),s("code",[t._v("StringBuffer")]),t._v(" 仅能获得 10%~15% 左右的性能提升，但却要冒多线程不安全的风险。")]),t._v(" "),s("h2",{attrs:{id:"四、string对象方法"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#四、string对象方法"}},[t._v("#")]),t._v(" 四、String对象方法")]),t._v(" "),s("h3",{attrs:{id:"_1-tochararray"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_1-tochararray"}},[t._v("#")]),t._v(" 1. toCharArray()")]),t._v(" "),s("p",[t._v("​     该方法的作用是返回一个字符数组，该字符数组中存放了当前字符串中的所有字符")]),t._v(" "),s("div",{staticClass:"language-java extra-class"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),t._v(" s1"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"我是中国人"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("char")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" c"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("s1"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("toCharArray")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("System")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("out"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("println")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"数组c的长度为："')]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v("c"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("length"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n")])])]),s("h3",{attrs:{id:"_2-string静态方法-string-valueof"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_2-string静态方法-string-valueof"}},[t._v("#")]),t._v(" 2. String静态方法：String.valueOf()")]),t._v(" "),s("p",[t._v("提供了将多种基本数据类型（包括数组、Object）转换成 String的方法")]),t._v(" "),s("h3",{attrs:{id:"_3-substring-方法"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_3-substring-方法"}},[t._v("#")]),t._v(" 3. substring() 方法")]),t._v(" "),s("p",[t._v("可以用来截取指定范围内的子字符串。")]),t._v(" "),s("p",[t._v("该方法有两个重载版本：")]),t._v(" "),s("ol",[s("li",[s("p",[s("code",[t._v("substring(int beginIndex)")]),t._v("：从指定索引位置开始截取字符串，直到字符串末尾。例如：")]),t._v(" "),s("div",{staticClass:"language-java extra-class"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),t._v(" str "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Hello World"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),t._v(" subStr "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" str"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("substring")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("6")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v('// subStr 的值为 "World"')]),t._v("\n")])])])]),t._v(" "),s("li",[s("p",[s("code",[t._v("substring(int beginIndex, int endIndex)")]),t._v("：从指定索引位置开始截取字符串，直到指定结束索引位置（不包括结束索引位置的字符）。例如：")]),t._v(" "),s("div",{staticClass:"language-java extra-class"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),t._v(" str "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Hello World"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),t._v(" subStr "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" str"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("substring")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("5")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v('// subStr 的值为 "Hello"')]),t._v("\n")])])])])]),t._v(" "),s("p",[t._v("需要注意的是，起始索引位置是包含在截取结果中的，而结束索引位置则不包含在截取结果中。如果传入的索引位置参数超出了字符串的长度，则会抛出 IndexOutOfBoundsException 异常。")]),t._v(" "),s("h3",{attrs:{id:"_4-charat方法"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_4-charat方法"}},[t._v("#")]),t._v(" 4. charAt方法")]),t._v(" "),s("p",[t._v("String类的charAt方法用于返回指定索引处的字符。它接受一个整数参数，该参数表示要获取的字符在字符串中的位置（从0开始计数）。例如，如果有一个字符串str，我们可以使用str.charAt(3)来获取该字符串的第4个字符（因为Java中的索引从0开始）。")]),t._v(" "),s("p",[t._v("语法如下：")]),t._v(" "),s("div",{staticClass:"language-JAVA extra-class"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("char")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("charAt")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" index"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),s("p",[t._v("示例代码如下：")]),t._v(" "),s("div",{staticClass:"language-java extra-class"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),t._v(" str "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Hello World"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("char")]),t._v(" ch "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" str"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("charAt")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("6")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// ch等于字符W")]),t._v("\n")])])]),s("h2",{attrs:{id:"五、string类的题目"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#五、string类的题目"}},[t._v("#")]),t._v(" 五、String类的题目")]),t._v(" "),s("ol",[s("li",[t._v("判断输出结果")])]),t._v(" "),s("div",{staticClass:"language-java extra-class"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("System")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("out"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("println")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"is"')]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("100")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("5")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\t\t"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//结果是is 1005，因为字符串先出现，之后的都是转为字符串")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("System")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("out"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("println")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("100")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("5")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"is"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\t\t"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//结果是105 is，字符串出现在后，前面的作为数字处理")]),t._v("\n")])])])])}),[],!1,null,null,null);s.default=r.exports}}]);